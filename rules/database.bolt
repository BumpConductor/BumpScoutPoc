/* 
path /solutions {
  read() { true }
  write() { isSignedIn() }
}

path /solvers {
  read() { true }
  write() { isSignedIn() }
}

path /bumps {
  read() { true }
  write() { isSignedIn() }
}

isSignedIn() { auth != null }
*/

// New rules below <<--------

path /bumps {
  read() {true}
}

path /bumps/{id} is Bump {
  write() { isSignedIn() }
} 

type Bump {

  validate() { this.description.length <= 255 }
  validate() { this.title.length <= 60 }
	
  description: String,
  title: String,
  created: InitialTimestamp,
  last_updated: CurrentTimestamp,
  tags: String[]  //????
}

type CurrentTimestamp extends Number {
  validate() { this == now }
}

type InitialTimestamp extends Number {
  validate() { initial(this, now) }
}

initial(value, init) { value == (prior(value == null) ? init : prior(value)) }
 

path /tags {
	read() { true }
}

path /tags/{ tag } is Tag {
	read() { true }
	write() { isSignedIn() }
}

type Tag {

	bumps: Array (bump ids)
	solutions: Array (solution id)
	solvers: Array (solver id)
}
